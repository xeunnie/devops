plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.palantir.docker' version '0.36.0'
}

group = 'seung.follow'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

def platform = project.hasProperty('platform') ? project.property('platform') : "frontend"

docker {
    if (platform == "frontend") {
        name "seung.follow/frontend:" + version
        files "frontend/dist"
        buildArgs(['DIST_DIR': "/"])
        dockerfile file('frontend/Dockerfile')
    } else {
        name "seung.follow/backend:" + version
        files tasks.bootJar.outputs.files
        buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
        dockerfile file('Dockerfile')
    }
}

task buildDocker(type: Exec) {
    workingDir project.rootDir
    if (platform == "frontend") {
        dependsOn 'buildFrontend'
        commandLine './gradlew', 'docker', '-Pplatform=frontend'
    } else {
        commandLine './gradlew', 'docker', '-Pplatform=backend'
    }
}

task dockerComposeUp(type: Exec, dependsOn: buildDocker) {
    environment 'DOCKER_IMAGE_TAG', version
    commandLine 'docker-compose', 'up', '--build', '-d'
}

task buildFrontend(type: Exec) {
    workingDir 'frontend'
    commandLine '/Users/chloechoi/.nvm/versions/node/v22.5.1/lib/node_modules/npm/bin/npm', 'run', 'build'
}